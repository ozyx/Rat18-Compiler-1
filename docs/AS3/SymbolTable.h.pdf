%PDF-1.3
%‚„œ”
2 0 obj
<<
/Length 3459
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
[(SymbolTable.h)-4500(Mon Dec 10 02:22:25 2018)-4500(1)]TJ
/TT4 1 Tf
7 0 0 7 46.8 793 Tm
[(1:)-599.8(#ifndef SYMBOLTABLE_H)]TJ
0 -1.1429 TD
[(2:)-599.8(#define SYMBOLTABLE_H)]TJ
T*
(3:)Tj
T*
[(4:)-599.8(#include <string>)]TJ
T*
[(5:)-599.8(#include <vector>)]TJ
T*
[(6:)-599.8(#include <sstream>)]TJ
T*
[(7:)-599.8(#include <iomanip>)]TJ
T*
[(8:)-599.8(#include <stack>)]TJ
T*
[(9:)-599.8(#include "Lexer.h")]TJ
-0.6 -1.1429 TD
[(10:)-599.7(#include "Globals.h")]TJ
T*
(11:)Tj
T*
[(12:)-599.7(// Begin instruction address at 1)]TJ
T*
[(13:)-599.7(static int instr_address = 1;)]TJ
T*
(14:)Tj
T*
[(15:)-599.7(class SymbolTable)]TJ
T*
[(16:)-599.7({)]TJ
T*
[(17:)-599.7(public:)]TJ
T*
[(18:)-599.7(  struct Instr)]TJ
T*
[(19:)-599.7(  {)]TJ
T*
[(20:)-599.7(    int address;)]TJ
T*
[(21:)-599.7(    std::string op;)]TJ
T*
[(22:)-599.7(    int operand;)]TJ
T*
(23:)Tj
T*
[(24:)-599.7(    Instr\(std::string op, int operand\) : address\(instr_address++\), op\(op\), operand\(operand\) {})]TJ
T*
[(25:)-599.7(  };)]TJ
T*
(26:)Tj
T*
[(27:)-599.7(  struct Symbol)]TJ
T*
[(28:)-599.7(  {)]TJ
T*
[(29:)-599.7(    Lexer::Token token;)]TJ
T*
[(30:)-599.7(    int address;)]TJ
T*
[(31:)-599.7(    std::string type;)]TJ
T*
(32:)Tj
T*
[(33:)-599.7(    Symbol\(Lexer::Token t, int address, std::string type\) : token\(t\), address\(address\), type\(type\) {})]TJ
T*
[(34:)-599.7(  };)]TJ
T*
(35:)Tj
T*
[(36:)-599.7(  SymbolTable\(\);)]TJ
T*
(37:)Tj
T*
[(38:)-599.7(  òSymbolTable\(\);)]TJ
T*
(39:)Tj
T*
[(40:)-599.7(  // Accessors)]TJ
T*
(41:)Tj
T*
[(42:)-599.7(        // Symbol Table)]TJ
T*
[(43:)-599.7(  int lookup\(Lexer::Token t\);)]TJ
T*
[(44:)-599.7(  std::string get_type\(Lexer::Token token\) const;)]TJ
T*
[(45:)-599.7(  int get_mem\(\);)]TJ
T*
[(46:)-599.7(  int get_address\(Lexer::Token token\);)]TJ
T*
(47:)Tj
T*
[(48:)-599.7(        // Output)]TJ
T*
[(49:)-599.7(  std::string list\(\);)]TJ
T*
[(50:)-599.7(  std::string list_instr\(\);)]TJ
T*
(51:)Tj
T*
[(52:)-599.7(        // Instruction table)]TJ
T*
[(53:)-599.7(  int get_instr_address\(\) const;)]TJ
T*
(54:)Tj
T*
[(55:)-599.7(        // Typestack)]TJ
T*
[(56:)-599.7(  std::string top_typestack\(\) const;)]TJ
T*
[(57:)-599.7(  bool typestack_empty\(\) const;)]TJ
T*
[(58:)-599.7(  )]TJ
T*
[(59:)-599.7(  // Mutators)]TJ
T*
(60:)Tj
T*
[(61:)-599.7(        // Symbol Table)]TJ
T*
[(62:)-599.7(  bool insert\(Lexer::Token t, std::string type\);)]TJ
T*
[(63:)-599.7(  bool remove\(Lexer::Token t\);)]TJ
T*
(64:)Tj
T*
[(65:)-599.7(        // Instruction table)]TJ
T*
[(66:)-599.7(  void gen_instr\(std::string op, int operand\);)]TJ
T*
(67:)Tj
T*
[(68:)-599.7(        // Jumpstack)]TJ
T*
[(69:)-599.7(  void push_jumpstack\(int address\);)]TJ
T*
[(70:)-599.7(  void back_patch\(int jump_addr\);)]TJ
T*
(71:)Tj
T*
[(72:)-599.7(        // Typestack)]TJ
T*
[(73:)-599.7(  void push_typestack\(std::string type\);)]TJ
T*
[(74:)-599.7(  bool pop_typestack\(\);)]TJ
T*
(75:)Tj
T*
[(76:)-599.7(private:)]TJ
T*
(77:)Tj
T*
[(78:)-599.7(  void incrementMem\(\);)]TJ
T*
(79:)Tj
T*
[(80:)-599.7(  std::vector<Symbol> table;)]TJ
T*
[(81:)-599.7(  std::vector<Instr> instructions;)]TJ
T*
[(82:)-599.7(  std::vector<int> jumpstack;)]TJ
T*
[(83:)-599.7(  std::stack <std::string> typestack;)]TJ
T*
[(84:)-599.7(  int memaddress;)]TJ
T*
[(85:)-599.7(  std::ostringstream error;)]TJ
T*
[(86:)-599.7(};)]TJ
T*
(87:)Tj
T*
[(88:)-599.7(#endif // SYMBOLTABLE_H)]TJ
ET
endstream
endobj
3 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
6 0 obj
<<
/Type /ExtGState
/SA false
/SM 0.02
/OP false
/op false
/OPM 1
/BG2 /Default
/UCR2 /Default
/HT /Default
/TR2 /Default
>>
endobj
8 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 262179
/FontBBox [-113 -250 749 801]
/FontName /Courier-Bold
/ItalicAngle 0
/StemV 133
/XHeight 439
/StemH 84
>>
endobj
9 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 35
/FontBBox [-28 -250 628 805]
/FontName /Courier
/ItalicAngle 0
/StemV 51
/XHeight 426
/StemH 51
>>
endobj
4 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 121
/Widths [600 0 0 0 0 0 0 0 0 0 0 0 0 0 600 0 
600 600 600 0 0 600 0 0 600 0 600 0 0 0 0 0 
0 0 0 0 600 0 0 0 0 0 0 0 0 600 0 0 
0 0 0 600 600 0 0 0 0 0 0 0 0 0 0 0 
0 600 600 600 0 600 0 0 600 0 0 0 600 600 600 600 
0 0 0 0 0 0 0 0 0 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier-Bold
/FontDescriptor 8 0 R
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 152
/Widths [600 0 600 600 0 0 0 0 600 600 0 600 600 0 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 0 
0 600 600 0 0 600 0 600 600 600 600 0 600 600 0 600 
0 0 0 600 600 0 0 0 0 600 0 0 0 0 0 600 
0 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 0 600 600 600 600 600 0 600 600 0 600 0 600 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier
/FontDescriptor 9 0 R
>>
endobj
1 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 3 0 R
/Contents 2 0 R
>>
endobj
10 0 obj
<<
/S /D
>>
endobj
11 0 obj
<<
/Nums [0 10 0 R ]
>>
endobj
7 0 obj
<<
/Type /Pages
/Kids [1 0 R]
/Count 1
/MediaBox [0 0 595 842]
>>
endobj
12 0 obj
<<
/CreationDate (D:20181210193320-08'00')
/ModDate (D:20181210193320-08'00')
/Producer (Apple pstopdf)
>>
endobj
13 0 obj
<<
/Type /Catalog
/Pages 7 0 R
/PageLabels 11 0 R
>>
endobj
xref
0 14
0000000000 65535 f 
0000005093 00000 n 
0000000016 00000 n 
0000003527 00000 n 
0000004164 00000 n 
0000004557 00000 n 
0000003633 00000 n 
0000005241 00000 n 
0000003773 00000 n 
0000003974 00000 n 
0000005173 00000 n 
0000005201 00000 n 
0000005322 00000 n 
0000005445 00000 n 
trailer
<<
/Size 14
/Root 13 0 R
/Info 12 0 R
/ID [<13936952317002b93c8216051ee9f579><13936952317002b93c8216051ee9f579>]
>>
startxref
5514
%%EOF
