%PDF-1.3
%‚„œ”
2 0 obj
<<
/Length 3996
>>
stream
BT
/TT2 1 Tf
10 0 0 10 29 806.3333 Tm
0 g
/GS1 gs
0 Tc
0 Tw
[(main.cpp)-4500(Mon Dec 10 17:16:51 2018)-4500(1)]TJ
/TT4 1 Tf
7 0 0 7 46.8 793 Tm
[(1:)-599.8(#include <iostream>)]TJ
0 -1.1429 TD
[(2:)-599.8(#include <fstream>)]TJ
T*
[(3:)-599.8(#include <iomanip>)]TJ
T*
[(4:)-599.8(#include "SyntaxAnalyzer.h")]TJ
T*
(5:)Tj
T*
[(6:)-599.8(int main\(\))]TJ
T*
[(7:)-599.8({)]TJ
T*
[(8:)-599.8(        const int COL_SIZE = 20;)]TJ
T*
(9:)Tj
-0.6 -1.1429 TD
[(10:)-599.7(        std::ifstream fin;                                        // Input file stream)]TJ
T*
[(11:)-599.7(        std::string inFile;                                       // Input file name)]TJ
T*
[(12:)-599.7(        std::vector<Lexer::Token> lineTokens; // List of lineTokens)]TJ
T*
[(13:)-599.7(        std::vector<Lexer::Token> tokens;)]TJ
T*
[(14:)-599.7(        std::stringstream *buffer;)]TJ
T*
[(15:)-599.7(        std::string line;)]TJ
T*
(16:)Tj
T*
[(17:)-599.7(        std::vector<std::string> files = {"test1.txt", "test2.txt", "test3.txt", "test4.txt"};)]TJ
T*
[(18:)-599.7(        std::ofstream out;)]TJ
T*
[(19:)-599.7(        out.open\("output.txt"\);)]TJ
T*
(20:)Tj
T*
[(21:)-599.7(        for \(std::string file : files\))]TJ
T*
[(22:)-599.7(        {)]TJ
T*
(23:)Tj
T*
[(24:)-599.7(                // Open the file)]TJ
T*
[(25:)-599.7(                fin.open\(file.c_str\(\)\);)]TJ
T*
(26:)Tj
T*
[(27:)-599.7(                if \(!fin\))]TJ
T*
[(28:)-599.7(                {)]TJ
T*
[(29:)-599.7(                        out << "file not found" << std::endl;)]TJ
T*
[(30:)-599.7(                        continue;)]TJ
T*
[(31:)-599.7(                })]TJ
T*
(32:)Tj
T*
[(33:)-599.7(                out << std::endl)]TJ
T*
[(34:)-599.7(                        << "RUNNING TEST CASE FILE \\"" << file << "\\"" << std::endl)]TJ
T*
[(35:)-599.7(                        << std::endl;)]TJ
T*
(36:)Tj
T*
[(37:)-599.7(                // File has opened, instantiate the lexer.)]TJ
T*
[(38:)-599.7(                Lexer *lexer = new Lexer\(\);)]TJ
T*
(39:)Tj
T*
[(40:)-599.7(                int lineNumber = 1;)]TJ
T*
(41:)Tj
T*
[(42:)-599.7(                while \(getline\(fin, line\)\))]TJ
T*
[(43:)-599.7(                {)]TJ
T*
[(44:)-599.7(                        buffer = new std::stringstream\(line\);)]TJ
T*
[(45:)-599.7(                        lineTokens = lexer->lex\(*buffer, lineNumber\);)]TJ
T*
(46:)Tj
T*
[(47:)-599.7(                        tokens.insert\(tokens.end\(\), lineTokens.begin\(\), lineTokens.end\(\)\);)]TJ
T*
(48:)Tj
T*
[(49:)-599.7(                        lineNumber++;)]TJ
T*
[(50:)-599.7(                })]TJ
T*
[(51:)-599.7(                fin.close\(\);)]TJ
T*
(52:)Tj
T*
[(53:)-599.7(                SyntaxAnalyzer *syntaxAnalyzer = new SyntaxAnalyzer\(tokens, out, false\);)]TJ
T*
(54:)Tj
T*
[(55:)-599.7(                try)]TJ
T*
[(56:)-599.7(                {)]TJ
T*
[(57:)-599.7(                        // Run syntactical analysis)]TJ
T*
[(58:)-599.7(                        syntaxAnalyzer->Analyze\(\);)]TJ
T*
[(59:)-599.7(                })]TJ
T*
[(60:)-599.7(                catch \(const SyntaxError &e\))]TJ
T*
[(61:)-599.7(                {)]TJ
T*
[(62:)-599.7(                        out << std::endl)]TJ
T*
[(63:)-599.7(                                << "ERROR: " << e.getMessage\(\);)]TJ
T*
[(64:)-599.7(                })]TJ
T*
(65:)Tj
T*
[(66:)-599.7(                tokens.clear\(\);)]TJ
T*
[(67:)-599.7(                out << syntaxAnalyzer->PrintAll\(\);)]TJ
T*
(68:)Tj
T*
[(69:)-599.7(                delete syntaxAnalyzer;)]TJ
T*
[(70:)-599.7(        })]TJ
T*
(71:)Tj
T*
[(72:)-599.7(        out.close\(\);)]TJ
T*
[(73:)-599.7(        std::cout << std::endl)]TJ
T*
[(74:)-599.7(                          << "EXECUTION HAS COMPLETED." << std::endl;)]TJ
T*
[(75:)-599.7(        std::cout << "Press enter to continue. . ." << std::endl;)]TJ
T*
[(76:)-599.7(        std::cin.get\(\);)]TJ
T*
(77:)Tj
T*
[(78:)-599.7(        return 0;)]TJ
T*
[(79:)-599.7(})]TJ
ET
endstream
endobj
3 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
6 0 obj
<<
/Type /ExtGState
/SA false
/SM 0.02
/OP false
/op false
/OPM 1
/BG2 /Default
/UCR2 /Default
/HT /Default
/TR2 /Default
>>
endobj
8 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 262179
/FontBBox [-113 -250 749 801]
/FontName /Courier-Bold
/ItalicAngle 0
/StemV 133
/XHeight 439
/StemH 84
>>
endobj
9 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 35
/FontBBox [-28 -250 628 805]
/FontName /Courier
/ItalicAngle 0
/StemV 51
/XHeight 426
/StemH 51
>>
endobj
4 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 112
/Widths [600 0 0 0 0 0 0 0 0 0 0 0 0 0 600 0 
600 600 600 0 0 600 600 600 600 0 600 0 0 0 0 0 
0 0 0 0 600 0 0 0 0 0 0 0 0 600 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 600 0 600 0 600 0 0 0 600 0 0 0 600 600 600 
600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier-Bold
/FontDescriptor 8 0 R
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 125
/Widths [600 600 600 600 0 0 600 0 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 0 
0 600 0 600 600 600 600 600 600 600 0 0 600 600 600 600 
600 0 600 600 600 600 0 0 600 0 600 0 600 0 0 600 
0 600 600 600 600 600 600 600 600 600 0 600 600 600 600 600 
600 0 600 600 600 600 600 600 600 600 600 600 0 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier
/FontDescriptor 9 0 R
>>
endobj
1 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 3 0 R
/Contents 2 0 R
>>
endobj
10 0 obj
<<
/S /D
>>
endobj
11 0 obj
<<
/Nums [0 10 0 R ]
>>
endobj
7 0 obj
<<
/Type /Pages
/Kids [1 0 R]
/Count 1
/MediaBox [0 0 595 842]
>>
endobj
12 0 obj
<<
/CreationDate (D:20181210193521-08'00')
/ModDate (D:20181210193521-08'00')
/Producer (Apple pstopdf)
>>
endobj
13 0 obj
<<
/Type /Catalog
/Pages 7 0 R
/PageLabels 11 0 R
>>
endobj
xref
0 14
0000000000 65535 f 
0000005574 00000 n 
0000000016 00000 n 
0000004064 00000 n 
0000004701 00000 n 
0000005072 00000 n 
0000004170 00000 n 
0000005722 00000 n 
0000004310 00000 n 
0000004511 00000 n 
0000005654 00000 n 
0000005682 00000 n 
0000005803 00000 n 
0000005926 00000 n 
trailer
<<
/Size 14
/Root 13 0 R
/Info 12 0 R
/ID [<09b610ce0b72c65b025c8f30b8f3965d><09b610ce0b72c65b025c8f30b8f3965d>]
>>
startxref
5995
%%EOF
